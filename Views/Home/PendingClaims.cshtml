@* @model IEnumerable<ReviewClaimsModel>
 *@
@{
    ViewData["Title"] = "Pending Claims";
    var pendingClaims = ViewData["PendingClaims"] as List<ST10187895_PROG6212_PART1.Models.ReviewClaimsModel>;
}
<style>
    .approve-button {
        background-color: #28a745; /* Green */
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }

        .approve-button:hover {
            background-color: #218838; /* Darker Green on hover */
        }

    .reject-button {
        background-color: #dc3545; /* Red */
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }

        .reject-button:hover {
            background-color: #c82333; /* Darker Red on hover */
        }
</style>
<body>
    <h1>Claims Pending Review</h1>
    <p1>Review pending claims information below</p1>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Claim ID</th>
                <th scope="col">Contractor ID</th>
                <th scope="col">Hours</th>
                <th scope="col">Hourly Rate</th>
                <th scope="col">Notes</th>
                <th scope="col">Documentation</th>
                <th scope="col">Claim Status</th>
                <th scope="col">Approve/Reject</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach(var pending in pendingClaims)
            {
                <tr>
                    <td>@pending.claimID</td>
                    <td>@pending.contractorID</td>
                    <td>@pending.hoursWorked</td>
                    <td>@pending.hourlyRate</td>
                    <td>@pending.notes</td>

                    <td>
                        <a href="~@pending.documentPath" download>Download</a>

                    </td>
                    <td>@pending.claimStatus</td>
                    <td>
                        <button class="approve-button" data-claim-id="@pending.claimID">Approve</button>
                        <button class="reject-button" data-claim-id="@pending.claimID">Reject</button>
                    </td>
                </tr>

            }
 
            
        </tbody>
    </table>
</body>
<script>
    // Add event listeners to Approve and Reject buttons
    document.addEventListener('DOMContentLoaded', () => {
        const buttons = document.querySelectorAll('.approve-button, .reject-button');

        buttons.forEach(button => {
            button.addEventListener('click', async (event) => {
                // Extract claimID from the clicked button
                const claimID = event.target.getAttribute('data-claim-id');
                // Determine action based on the button clicked
                const action = event.target.classList.contains('approve-button')
                    ? 'approved'
                    : 'rejected';

                // Send the update request to the server
                const response = await fetch('/UpdateStatus/UpdateClaimStatus', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ claimID, action })
                });

                if (response.ok) {
                    // Reload the page or update the UI
                    location.reload();
                } else {
                    alert('Failed to update claim status. Please try again.');
                }
            });
        });
    });
</script>


